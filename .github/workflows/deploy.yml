name: Deploy server

on:
  workflow_call:
    inputs:
      aws_region:
        required: true
        type: string
      environment:
        required: true
        type: string
      aws_role:
        required: true
        type: string

jobs:
  build_server:
    name: Build Server
    permissions:
      id-token: write
      contents: read
      packages: write
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ inputs.aws_role }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Build server
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/tmm-bluto:${{ github.sha }}
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=ghcr.io/bluto-dev/bluto:1-buildcache
          cache-to: type=registry,ref=ghcr.io/bluto-dev/bluto:1-buildcache,mode=max

  deploy_server:
    needs:
      - build_server
    name: Deploy server
    permissions:
      id-token: write
      contents: read
      packages: write
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-24.04
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ inputs.aws_role }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Download server task definition
        run: |
          aws ecs describe-task-definition --task-definition tmm-bluto \
          --query taskDefinition | jq -r 'del(
            .taskDefinitionArn,
            .requiresAttributes,
            .compatibilities,
            .revision,
            .status,
            .registeredAt,
            .registeredBy
          )' > server_taskdef.json

      - name: Update Amazon ECS task definition for server
        id: task-def-server
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: server_taskdef.json
          container-name: bluto
          image: ${{ steps.login-ecr.outputs.registry }}/tmm-bluto:${{ github.sha }}

      - name: Deploy Amazon ECS backend service with new server task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def-server.outputs.task-definition }}
          service: tmm-bluto
          cluster: tmm-cluster
          wait-for-service-stability: true
          force-new-deployment: true
